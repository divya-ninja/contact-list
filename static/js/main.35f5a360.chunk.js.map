{"version":3,"sources":["Components/ContactDetails.js","Components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactDetails","props","handleDeleteContact","bind","handleEditContact","showMoreDetails","fetch","this","contact","id","method","body","JSON","stringify","title","userId","headers","then","response","json","console","log","document","getElementById","classList","toggle","name","className","onClick","phone","email","address","street","suite","city","zipcode","website","Component","Contacts","state","contacts","showContacts","handleShowContacts","handleAddContact","axios","get","setState","data","tel","value","newContact","type","placeholder","required","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.35f5a360.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport './ContactDetails.css';\r\n\r\nclass ContactDetails extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // binding the handleDeleteContact, handleEditContact and showMoreDtails functions.\r\n        this.handleDeleteContact = this.handleDeleteContact.bind(this);\r\n        this.handleEditContact = this.handleEditContact.bind(this);\r\n        this.showMoreDetails = this.showMoreDetails.bind(this);\r\n    }\r\n\r\n    // fetching api and making a dummy DELETE call to the server\r\n    handleDeleteContact(){\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.props.contact.id}`, {\r\n            method: 'DELETE',\r\n        });\r\n    }\r\n\r\n    // fetching api and making a dummy PUT call to the server\r\n    handleEditContact(){\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.props.contact.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                id: 1,\r\n                title: 'foo',\r\n                body: 'bar',\r\n                userId: 1,\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            })\r\n        .then((response) => response.json())\r\n        .then((json) => console.log(json));\r\n    }\r\n\r\n    // function for showing details of a contact\r\n    showMoreDetails(){\r\n        const details = document.getElementById(this.props.contact.id);\r\n        details.classList.toggle(\"show\");\r\n    }\r\n\r\n    render(){\r\n        const contact = this.props.contact;\r\n        return(\r\n            <div> \r\n                {/* visible details of a contact */}\r\n                <h3 id=\"visible-details\">\r\n                    {contact.name}\r\n                    <div id=\"edit-delete-icons\">\r\n                        <i className=\"fas fa-user-edit\" onClick={this.handleEditContact}></i>\r\n                        <i className=\"far fa-trash-alt\" onClick={this.handleDeleteContact}></i>\r\n                    </div>\r\n                </h3>   \r\n                \r\n                {/* hidden details of a contact */}\r\n                <i id=\"more-details\" className=\"fas fa-chevron-down\" onClick={this.showMoreDetails}>\r\n                    <div id={contact.id} className=\"show\">\r\n                        <div id=\"phone\">\r\n                            <i className=\"details-icons fas fa-phone\"></i>\r\n                            {contact.phone}\r\n                        </div>\r\n                        <div id=\"email\">\r\n                            <i className=\"details-icons fas fa-envelope\"></i>\r\n                            {contact.email}\r\n                        </div>\r\n                        <div>\r\n                            <i className=\"details-icons fas fa-map-marker-alt\">Address</i>\r\n                            <div id=\"address\">\r\n                                {\"street:\"} {contact.address.street} <br></br>\r\n                                {\"suite:\"} {contact.address.suite} <br></br>\r\n                                {\"city:\"} {contact.address.city} <br></br>\r\n                                {\"zipcode:\"} {contact.address.zipcode}\r\n                            </div>\r\n                        </div>\r\n                        <div>{\"Website:\"} {contact.website}</div>\r\n                    </div>\r\n                </i>\r\n                <hr></hr>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactDetails;","import React, {Component} from \"react\";\r\nimport './Contacts.css';\r\nimport axios from 'axios';\r\nimport ContactDetails from \"./ContactDetails\";\r\n\r\nclass Contacts extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            contacts: [],\r\n            showContacts: false\r\n        }\r\n\r\n        // binding the functions\r\n        this.handleShowContacts = this.handleShowContacts.bind(this);\r\n        this.handleAddContact = this.handleAddContact.bind(this);\r\n    }\r\n\r\n    // fetching the api and saving the data in a state at the start\r\n    componentDidMount(){\r\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => {\r\n            this.setState({\r\n                contacts: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    // function for toggling between showing and hiding contacts\r\n    handleShowContacts(){\r\n        this.setState({\r\n            showContacts: !this.state.showContacts\r\n        })\r\n    }\r\n\r\n    // function for adding a contact\r\n    handleAddContact(){\r\n        const name = document.getElementById('name');\r\n        const tel = document.getElementById('tel');\r\n        // fetching the api and making a dummy POST call to add the contact to the server\r\n        fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            name: name.value,\r\n            phone: tel.value\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n        })\r\n        .then((response) => response.json())\r\n        // Saving the contact details in a state\r\n        .then(data => this.setState({ newContact: {data} }));\r\n\r\n        // resetting the input values\r\n        name.value = \"\";\r\n        tel.value = \"\";\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"app-container\">\r\n                <h1>Contact List</h1>\r\n\r\n                {/* input for adding a contact */}\r\n                <div id=\"input\">\r\n                    <input id=\"name\" type=\"text\" placeholder=\"Name\" required></input>\r\n                    <input id=\"tel\" type=\"tel\" placeholder=\"Telephone no.\" required></input>\r\n                    <button type=\"submit\" onClick={this.handleAddContact}>Add Contact</button>\r\n                </div>\r\n\r\n                {/* button to toggle between Showing and hiding contacts */}\r\n                <button id=\"show-hide-contacts\" onClick={this.handleShowContacts}>{!this.state.showContacts ? \"Show Contacts\" : \"Hide Contacts\"}</button>\r\n                {this.state.showContacts && <ul id=\"listOfContacts\">\r\n                            {this.state.contacts.map(\r\n                                (contact) =>\r\n                                <li key={contact.email} className=\"list-group-item\">\r\n                                    <ContactDetails contact = {contact}/>\r\n                                </li>\r\n                            )}\r\n                        </ul>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","\nimport './App.css';\nimport Contacts from './Components/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}